<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Class Name="Math.Operations.Addition">
    <Position X="6.5" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Addition.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Subtraction">
    <Position X="8.5" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Subtraction.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Divide">
    <Position X="12" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Divide.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Multiplication">
    <Position X="13.75" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Multiplication.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.BinaryOperation">
    <Position X="11.5" Y="1" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>BinaryOperation.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Square">
    <Position X="7" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Square.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Factorial">
    <Position X="10.75" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Factorial.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Reciprocal">
    <Position X="12.75" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Reciprocal.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.UnaryOperation">
    <Position X="11.75" Y="5.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>UnaryOperation.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.ExpressionEvaluator">
    <Position X="1.25" Y="6.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAEAAAAAAAgEAAAQACAIgAAAAAAAAAAAEAACAAAAAA=</HashCode>
      <FileName>ExpressionEvaluator.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Power">
    <Position X="10.25" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Power.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Log">
    <Position X="15.5" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAEAAAAAAAAAAA=</HashCode>
      <FileName>Log.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.LogNatural">
    <Position X="14.75" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAABAAAAAA=</HashCode>
      <FileName>LogNatural.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Operation">
    <Position X="0.5" Y="0.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAQAAAAgAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Operation.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.ExpressionToken">
    <Position X="1.25" Y="10.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAgA=</HashCode>
      <FileName>ExpressionToken.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.OperandMismatchException">
    <Position X="3.75" Y="11.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>OperandMismatchException.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Precentage">
    <Position X="17.25" Y="3.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>Precentage.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.ImproperBracketsException">
    <Position X="6" Y="11.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>ImproperBracketsException.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.InvalidExpressionException">
    <Position X="8" Y="11.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>InvalidExpressionException.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.UndefinedOperationException">
    <Position X="10.5" Y="11.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>UndefinedOperationException.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="Math.Operations.Operator">
    <Position X="3.75" Y="13.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA=</HashCode>
      <FileName>Operator.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>